{"version":3,"sources":["components/GlobalStyles.ts","components/NavBar/ThemeColorMode/ThemeColorMode.tsx","components/NavBar/NavBar.tsx","components/SearchAndContent/SearchInput/SearchInput.tsx","components/SearchAndContent/SelectRegion/SelectRegion.tsx","components/SearchAndContent/CountriesContent/CountriesCard/CountriesCard.tsx","components/SearchAndContent/CountriesContent/CountriesContent.tsx","components/SearchAndContent/Pagination/Pagination.tsx","components/SearchAndContent/SearchAndContent.tsx","Actions/ActionTypes/countriesTypes.ts","components/CountryDetails/CountryDetails.tsx","components/MainPage/MainPage.tsx","Actions/countriesActions.ts","components/Theme/Light.ts","components/Theme/Dark.ts","reducers/index.ts","reducers/countriesReducers.ts","tools/store.ts","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","props","theme","colors","bodyBackground","fontColor","ThemeColorMode","IconInfoModeWrapper","onClick","switchThemeColor","themeColor","style","fontSize","styled","div","NavBar","ThemeColorModeWrapper","SearchInput","onChange","e","searchCountries","type","placeholder","SelectRegion","SelectItemWrapper","selectRegion","value","fontColorSelect","selectBackground","CountriesCard","partingCountriesArr","i","countriesList","length","item","slice","push","pagesNumber","map","country","index","CountriesCardWrapper","region","name","src","flag","alt","population","capital","handleMoreInfo","cardColor","fontCardColor","CountriesContent","Pagination","paginationNumbers","pagination","countriesListLength","backgroundColor","ref","pagesNumberEl","current","handleChoosePageNumber","choosePageNumber","forEach","children","SearchAndContent","useState","setCountriesList","setRegion","setPagesNumber","setchoosePageNumber","useRef","filteredCountries","history","useHistory","useEffect","Math","ceil","countriesByregion","filter","Array","fill","_","createRef","SearchRegionWrapper","dataset","number","includes","target","CountriesContentWrapper","countryRegion","parentElement","countryName","pathname","state","PaginationWrapper","backgroundContentCard","fontColorInput","inputbackground","fontColorInputPlaceholder","GET_COUNTRIES","CountryDetails","countryDetails","useLocation","CountryDetailsWrapper","nativeName","subregion","topLevelDomain","currencies","code","languages","language","color","paddingRight","borders","detailsInfoFontColor","bordersCountriesBorder","MainPage","height","window","innerHeight","width","innerWidth","dimensions","setDimensions","setPagination","dispatch","useDispatch","fetch","then","res","json","actionTypes","useSelector","globalState","countries","handleResize","addEventListener","removeEventListener","themeColorSettings","countriesListAndFiltered","NavBarWrapper","path","exact","SearchAndContentWrapper","nav","navBarBackground","section","paginationBorderColor","paginationBackgroundColor","paginationFontColor","combineReducers","action","payload","store","createStore","reducers","applyMiddleware","thunk","App","setThemeColor","themeColorSetting","light","dark","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.380b4a77.chunk.js","sourcesContent":["import { createGlobalStyle} from \"styled-components\"\r\n\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;600;800&display=swap');\r\n*{\r\n    margin:0;\r\n    padding:0;\r\n    box-sizing: border-box;\r\n    font-size: 16px;\r\n}\r\n  body {\r\n    background: ${props => props.theme.colors.bodyBackground};\r\n    color: ${props => props.theme.colors.fontColor};\r\n    font-family: 'Nunito Sans', sans-serif;\r\n    /* transition: all 0.50s linear; */\r\n  }\r\n  `","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HiOutlineMoon } from 'react-icons/hi';\r\nimport {FiSun} from 'react-icons/fi'\r\n\r\ninterface IThemeColor{\r\n    themeColor: string;\r\n    switchThemeColor: () => void;\r\n}\r\n\r\n\r\nexport const ThemeColorMode: React.FC<IThemeColor> = (props)=>{\r\n    return(\r\n        <>\r\n            <IconInfoModeWrapper onClick={()=>props.switchThemeColor()}>\r\n                {props.themeColor === \"light\" ? <HiOutlineMoon style={{fontSize: \"1.3em\"}} />:  <FiSun style={{fontSize: \"1.3em\"}} />}\r\n                <span>{props.themeColor === \"light\" ? \"Dark mode\" : \"Light mode\"}</span>\r\n            </IconInfoModeWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nconst IconInfoModeWrapper = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nheight: 30%;\r\ncursor: pointer;\r\nspan{\r\n    font-family: 'Nunito Sans', sans-serif;\r\n    font-size: 1em;\r\n    margin-left: 0.50rem;\r\n    color: ${props => props.theme.colors.fontColor}\r\n}\r\n`\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {ThemeColorMode} from './ThemeColorMode/ThemeColorMode'\r\n\r\ninterface IThemeColor{\r\n    themeColor: string;\r\n    switchThemeColor: () => void;\r\n}\r\n\r\nexport const NavBar:React.FC<IThemeColor> = (props)=>{\r\n    return(\r\n        <>\r\n            <h3>Where in the world?</h3>\r\n            <ThemeColorModeWrapper>\r\n                <ThemeColorMode switchThemeColor = {props.switchThemeColor} themeColor={props.themeColor}/>\r\n            </ThemeColorModeWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ThemeColorModeWrapper = styled.div`\r\ndisplay: flex;\r\npadding: 1rem 0.75rem 0 0;\r\nspan{\r\n    font-size: 0.9rem;\r\n}\r\n\r\n`","import React from 'react'\r\n\r\ninterface ISearchCountries{\r\n    searchCountries:(e:React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\nexport const SearchInput: React.FC<ISearchCountries> = (props)=>{\r\n    return(\r\n        <>\r\n            <input onChange={(e)=>props.searchCountries(e)} type=\"text\" placeholder=\"Search for a country\"></input>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ISelectRegion{\r\n  selectRegion: (e: React.ChangeEvent<HTMLSelectElement>) => void\r\n}\r\n\r\n\r\nexport const SelectRegion: React.FC<ISelectRegion> = (props)=>{\r\n    return(\r\n        <>\r\n        \r\n        <SelectItemWrapper>\r\n        <div>\r\n            <select onChange={(e)=>props.selectRegion(e)}>\r\n                <option value=\"Region\">Filter by Region</option>\r\n                <option value=\"Africa\">Africa</option>\r\n                <option value=\"Asia\">Asia</option>\r\n                <option value=\"Americas\">America</option>\r\n                <option value=\"Europe\">Europe</option>\r\n                <option value=\"Oceania\">Oceania</option>\r\n            </select>\r\n        </div>\r\n        </SelectItemWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nconst SelectItemWrapper = styled.div`\r\nwidth:100%;\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nmargin-top: 2rem;\r\npadding-left: 1.3rem;\r\n\r\ndiv{\r\n    @import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;600;800&display=swap');\r\n    position: relative;\r\n  background-color: #FEFEFE;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 2px 9px;\r\n  width: auto;\r\n  float: left;\r\n  max-width: 100%;\r\n  border-radius: 2px;\r\n\r\n \r\n  select {\r\n    font-family: \"Nunito Sans\", sans-serif;\r\n    font-size: 1rem;\r\n    font-weight: 200;\r\n    max-width: 100%;\r\n    padding: 8px 24px 8px 10px;\r\n    border: none;\r\n    color: ${props => props.theme.colors.fontColorSelect};\r\n    background-color: ${props => props.theme.colors.selectBackground};\r\n    -webkit-appearance: none;\r\n       -moz-appearance: none;\r\n            appearance: none;\r\n    cursor: pointer;\r\n    &:active,\r\n    &:focus {\r\n      outline: none;\r\n      box-shadow: none;\r\n    }\r\n  }\r\n  &:after {\r\n    content: \" \";\r\n    position: absolute;\r\n    top: 50%;\r\n    margin-top: -2px;\r\n    right: 8px;\r\n    width: 0; \r\n    height: 0; \r\n    border-left: 5px solid transparent;\r\n    border-right: 5px solid transparent;\r\n    border-top: 5px solid #aaa;\r\n  }\r\n\r\n}\r\n \r\n\r\n\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {ISingleCountry} from '../../../../entities/singleCountryType'\r\n\r\n\r\ninterface ICountriesList{\r\n    countriesList: ISingleCountry[];\r\n    pagesNumber: number;\r\n    handleMoreInfo: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\r\n}\r\n\r\nexport const CountriesCard: React.FC<ICountriesList> = (props)=>{\r\n  \r\n    let partingCountriesArr = []\r\n   \r\n    for(let i=0; i<props.countriesList.length; i+=10){\r\n       const item = props.countriesList.slice(i, i+10)\r\n    \r\n       partingCountriesArr.push(item)\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        {partingCountriesArr[props.pagesNumber-1]?.map((country: ISingleCountry, index: number)=>{\r\n             \r\n            return(\r\n                <CountriesCardWrapper key={index} data-region={country.region} data-name={country.name}>\r\n                <div>\r\n                    <img src={country.flag} alt=\"flag\" />\r\n                </div>\r\n                <div>\r\n                    <span>{country.name}</span>\r\n                    <div>\r\n                        <span>Population: <span>{country.population}</span></span>\r\n                        <span>Region: <span>{country.region}</span></span>\r\n                        <span>Capital: <span>{country.capital}</span></span>\r\n                    </div>\r\n                    <div>\r\n                        <a onClick={(e)=>props.handleMoreInfo(e)}>More info...</a>\r\n                    </div>\r\n                </div>\r\n                </CountriesCardWrapper>\r\n            )\r\n        }) }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst CountriesCardWrapper = styled.div`\r\nwidth: 300px;\r\nbox-shadow: rgba(0, 0, 0, 0.35) 0px 2px 9px;\r\nmargin-top: 1.3rem;\r\nbackground-color: ${props => props.theme.colors.cardColor};\r\n>div:nth-of-type(1){\r\n    width:100%;\r\n    height:150px;\r\n    border-bottom: 0.1rem solid lightgrey;\r\n    >img{\r\n        width: 100%;\r\n        height:100%;\r\n        object-fit: cover;\r\n    }\r\n}\r\n>div:nth-of-type(2){\r\n    @import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;600;800&display=swap');\r\n    box-sizing: border-box;\r\n    width:100%;\r\n    height: 170px;\r\n    padding: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    span{\r\n            font-family: 'Nunito Sans', sans-serif;\r\n            font-weight: 800;\r\n            padding: 0.1rem 0 0.1rem 0;\r\n            color: ${props => props.theme.colors.fontCardColor};\r\n            font-size: 1em;\r\n    }\r\n    >div{\r\n       \r\n        display: flex;\r\n        flex-direction: column;\r\n        >span:nth-of-type(1), span:nth-of-type(2), span:nth-of-type(3){\r\n            font-family: 'Nunito Sans', sans-serif;\r\n            font-weight: 600;\r\n            padding: 0.1rem 0 0.1rem 0;\r\n            color: ${props => props.theme.colors.fontCardColor};\r\n            span{\r\n                font-weight: 300;\r\n                color: ${props => props.theme.colors.fontCardColor};\r\n            }\r\n        }\r\n    }\r\n    div:nth-of-type(2){\r\n        width:100%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-end;\r\n        align-items:center;\r\n        a{\r\n            padding: 0;\r\n            cursor: pointer;\r\n            font-size: 0.8rem;\r\n            font-weight: 300;\r\n        }\r\n    }\r\n}\r\n@media (min-width: 768px){\r\n    width: calc(30% - 0.9rem);\r\n    margin: 0.9rem;\r\n}\r\n@media (min-width: 1024px){\r\n    width: calc(23% - 0.9rem);\r\n    margin: 0.9rem;\r\n    \r\n}\r\n\r\n`","import React from 'react'\r\nimport {CountriesCard} from './CountriesCard/CountriesCard'\r\nimport {ISingleCountry} from '../../../entities/singleCountryType'\r\n\r\ninterface ICountriesList{\r\n    countriesList: ISingleCountry[];\r\n    pagesNumber: number;\r\n    handleMoreInfo: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void\r\n}\r\n\r\nexport const CountriesContent: React.FC<ICountriesList> = (props)=>{\r\n\r\n    return(\r\n        <>\r\n            <CountriesCard countriesList = {props.countriesList} pagesNumber = {props.pagesNumber} handleMoreInfo = {props.handleMoreInfo}/>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\ninterface IPagination{\r\n    pagesNumber: number;\r\n    handleChoosePageNumber: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\r\n    pagination: string;\r\n    choosePageNumber: number;\r\n    countriesListLength: number;\r\n    pagesNumberEl: any;\r\n    themeColor: string;\r\n}\r\n\r\nexport const Pagination: React.FC<IPagination> = (props)=>{\r\n    const paginationNumbers = []\r\n  \r\n \r\n    if(true && props.pagination===\"desktop\" && props.countriesListLength>0){\r\n        for(let i=0; i<props.pagesNumber;i++){\r\n            paginationNumbers.push(<div style={props.themeColor === \"light\" ? {backgroundColor: \"#fff\"} : {backgroundColor: \"#1E2C35\"}}  ref={props.pagesNumberEl.current[i]} key={i+1} onClick={(e)=>props.handleChoosePageNumber(e)} data-number={i+1} >{i+1}</div>)\r\n        }\r\n    } else if(props.pagination===\"mobile\" && props.countriesListLength>0) {\r\n        paginationNumbers.push(<div key={1}>{props.choosePageNumber}</div>)\r\n    }\r\n\r\nif(props.pagination===\"desktop\"){\r\n    paginationNumbers.forEach((item)=>{\r\n    if(item.props.children===props.choosePageNumber){\r\n        props.themeColor === \"light\" ? item.props.style.backgroundColor =  \"lightgrey\" : item.props.style.backgroundColor= \"#0a3855\"\r\n    }\r\n})\r\n}\r\n    return(\r\n        <>\r\n            {paginationNumbers}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useRef, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SearchInput } from \"./SearchInput/SearchInput\";\r\nimport { SelectRegion } from \"./SelectRegion/SelectRegion\";\r\nimport { CountriesContent } from \"./CountriesContent/CountriesContent\";\r\nimport { ISingleCountry } from \"../../entities/singleCountryType\";\r\nimport { Pagination } from \"./Pagination/Pagination\";\r\nimport {\r\n  HiOutlineArrowCircleLeft,\r\n  HiOutlineArrowCircleRight,\r\n} from \"react-icons/hi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface ICountriesList {\r\n  countriesList: ISingleCountry[];\r\n  pagination: string;\r\n  themeColor: string;\r\n  switchThemeColor: () => void;\r\n}\r\ninterface IThemeColor {\r\n  themeColor: string;\r\n}\r\nexport const SearchAndContent: React.FC<ICountriesList> = (props) => {\r\n  const [countriesList, setCountriesList] = useState<ISingleCountry[]>([]);\r\n  const [region, setRegion] = useState<string>(\"Region\");\r\n  const [pagesNumber, setPagesNumber] = useState<number>(0);\r\n  const [choosePageNumber, setchoosePageNumber] = useState<number>(1);\r\n  const pagesNumberEl = useRef<any>([]);\r\n  let filteredCountries: ISingleCountry[] = [];\r\n  let history = useHistory();\r\n\r\n  const handleMoreInfo = (\r\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    const countryRegion = (e.target as Element).parentElement?.parentElement\r\n      ?.parentElement?.dataset.region;\r\n    const countryName = (e.target as Element).parentElement?.parentElement\r\n      ?.parentElement?.dataset.name;\r\n\r\n    const country = countriesList.filter((country: ISingleCountry) => {\r\n      if (country.name === countryName && country.region === countryRegion)\r\n        return country;\r\n    });\r\n    history.push({\r\n      pathname: `/${countryRegion}/${countryName}`,\r\n      state: { country },\r\n    });\r\n  };\r\n  const selectRegion = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setRegion(e.target.value);\r\n    setchoosePageNumber(1);\r\n    pagesNumberEl.current.forEach((item: any) => {\r\n      if (item.current === null) return;\r\n      props.themeColor === \"light\"\r\n        ? (item.current.style.backgroundColor = \"#fff\")\r\n        : (item.current.style.backgroundColor = \"#1E2C35\");\r\n      if (item.current.dataset.number === \"1\")\r\n        props.themeColor === \"light\"\r\n          ? (item.current.style.backgroundColor = \"lightgrey\")\r\n          : (item.current.style.backgroundColor = \"#0a3855\");\r\n    });\r\n  };\r\n  const handleChoosePageNumber = (e: any) => {\r\n    setchoosePageNumber(e.target.dataset.number * 1);\r\n\r\n    pagesNumberEl.current.forEach((item: any) => {\r\n      if (item.current === null) return;\r\n      props.themeColor === \"light\"\r\n        ? (item.current.style.backgroundColor = \"#fff\")\r\n        : (item.current.style.backgroundColor = \"#1E2C35\");\r\n\r\n      if (item.current.dataset.number === e.target.dataset.number) {\r\n        props.themeColor === \"light\"\r\n          ? (item.current.style.backgroundColor = \"lightgrey\")\r\n          : (item.current.style.backgroundColor = \"#0a3855\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (region === \"Region\") {\r\n      setCountriesList(props.countriesList);\r\n      setPagesNumber(Math.ceil(props.countriesList.length / 10));\r\n    } else {\r\n      const countriesByregion = props.countriesList.filter(\r\n        (country: ISingleCountry) => {\r\n          if (country.region === region) {\r\n            return country;\r\n          }\r\n        }\r\n      );\r\n      setCountriesList(countriesByregion);\r\n      setPagesNumber(Math.ceil(countriesByregion.length / 10));\r\n    }\r\n\r\n    return () => {};\r\n  }, [region, props.countriesList]);\r\n\r\n  const searchCountries = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    pagesNumberEl.current.forEach((item: any) => {\r\n      if (item.current === null) return;\r\n      props.themeColor === \"light\"\r\n        ? (item.current.style.backgroundColor = \"#fff\")\r\n        : (item.current.style.backgroundColor = \"#1E2C35\");\r\n      if (item.current.dataset.number === \"1\")\r\n        props.themeColor === \"light\"\r\n          ? (item.current.style.backgroundColor = \"lightgrey\")\r\n          : (item.current.style.backgroundColor = \"#0a3855\");\r\n    });\r\n\r\n    setchoosePageNumber(1);\r\n    filteredCountries = props.countriesList.filter(\r\n      (country: ISingleCountry, index: number) => {\r\n        if (country.name.includes(`${e.target.value}`)) {\r\n          if (country.region === region) return country;\r\n          else if (region === \"Region\") return country;\r\n        }\r\n      }\r\n    );\r\n\r\n    setCountriesList(filteredCountries);\r\n    setPagesNumber(Math.ceil(filteredCountries.length / 10));\r\n  };\r\n  const incerementPageNumber = () => {\r\n    if (choosePageNumber >= Math.ceil(countriesList.length) / 10) {\r\n      return;\r\n    }\r\n    setchoosePageNumber(choosePageNumber + 1);\r\n  };\r\n  const decrementPageNumber = () => {\r\n    if (choosePageNumber <= 1) {\r\n      return;\r\n    }\r\n    setchoosePageNumber(choosePageNumber - 1);\r\n  };\r\n\r\n  if (pagesNumberEl.current.length !== Math.ceil(countriesList.length) / 10) {\r\n    pagesNumberEl.current = Array(25)\r\n      .fill(0)\r\n      .map((_, i) => pagesNumberEl.current[i] || createRef());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SearchRegionWrapper>\r\n        <SearchInput searchCountries={searchCountries} />\r\n        <SelectRegion selectRegion={selectRegion} />\r\n      </SearchRegionWrapper>\r\n      <CountriesContentWrapper>\r\n        <CountriesContent\r\n          countriesList={countriesList}\r\n          pagesNumber={choosePageNumber}\r\n          handleMoreInfo={handleMoreInfo}\r\n        />\r\n      </CountriesContentWrapper>\r\n      <PaginationWrapper themeColor={props.themeColor}>\r\n        <HiOutlineArrowCircleLeft onClick={() => decrementPageNumber()} />\r\n        <Pagination\r\n          pagesNumber={pagesNumber}\r\n          handleChoosePageNumber={handleChoosePageNumber}\r\n          pagination={props.pagination}\r\n          choosePageNumber={choosePageNumber}\r\n          countriesListLength={countriesList.length}\r\n          pagesNumberEl={pagesNumberEl}\r\n          themeColor={props.themeColor}\r\n        />\r\n        <HiOutlineArrowCircleRight onClick={() => incerementPageNumber()} />\r\n      </PaginationWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CountriesContentWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  min-height: 10vh;\r\n  display: flex;\r\n  padding: 1.5rem 0 2rem 0;\r\n\r\n  background-color: ${(props) => props.theme.colors.backgroundContentCard};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: stretch;\r\n    padding-left: 1rem;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: stretch;\r\n    padding-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst SearchRegionWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 5vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.2rem 0.5rem;\r\n\r\n  input {\r\n    width: 90%;\r\n    padding: 12px 24px;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 2px 9px;\r\n\r\n    transition: transform 250ms ease-in-out;\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n\r\n    color: ${(props) => props.theme.colors.fontColorInput};\r\n    background-color: ${(props) => props.theme.colors.inputbackground};\r\n\r\n    background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E\");\r\n    background-repeat: no-repeat;\r\n    background-size: 18px 18px;\r\n    background-position: 95% center;\r\n    border-radius: 50px;\r\n    border: none;\r\n    transition: padding 250ms ease-in-out;\r\n    backface-visibility: hidden;\r\n    transform-style: preserve-3d;\r\n\r\n    &::placeholder {\r\n      color: ${(props) => props.theme.colors.fontColorInputPlaceholder};\r\n      text-transform: uppercase;\r\n      letter-spacing: 1.5px;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n      padding: 12px 12px;\r\n      outline: 0;\r\n      border: none;\r\n\r\n      border-radius: 0;\r\n      background-position: 95% center;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PaginationWrapper = styled.div<IThemeColor>`\r\n  width: 100%;\r\n  min-height: 2vh;\r\n  padding: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  div {\r\n    margin: 0.4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n    width: 30px;\r\n    height: 30px;\r\n    border: 0.1rem solid\r\n      ${(props) => (props.themeColor === \"light\" ? \"lightgray\" : \"#fff\")};\r\n    color: ${(props) => (props.themeColor === \"light\" ? \"#000\" : \"#fff\")};\r\n  }\r\n  div:nth-of-type(1) {\r\n    background-color: ${(props) =>\r\n      props.themeColor === \"light\" ? \"#fff\" : \"#1E2C35\"};\r\n    color: ${(props) => (props.themeColor === \"light\" ? \"#000\" : \"#fff\")};\r\n  }\r\n  svg {\r\n    display: block;\r\n    width: 30px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n  }\r\n  svg:nth-of-type(1) {\r\n    margin-right: 0.3rem;\r\n  }\r\n  svg:nth-of-type(2) {\r\n    margin-left: 0.3rem;\r\n  }\r\n  @media (min-width: 1023px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    padding-left: 1rem;\r\n    svg {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n","import {ISingleCountry} from '../../entities/singleCountryType'\r\nexport const GET_COUNTRIES = 'GET_COUNTRIES'; \r\n\r\nexport interface ICountriesTypes{\r\n    GET_COUNTRIES: {\r\n        countriesList: ISingleCountry[]\r\n    }\r\n}","import React from 'react'\r\nimport {useLocation} from 'react-router-dom'\r\nimport styled from 'styled-components';\r\n\r\n\r\ninterface IThemeColor {\r\n    themeColor: string;\r\n}\r\n\r\n\r\nexport const CountryDetails:React.FC<IThemeColor> = (props) => {\r\n\r\n    let location = useLocation<any>();\r\n    const countryDetails = location.state\r\n\r\n    return (\r\n        <CountryDetailsWrapper>\r\n            <div>\r\n                <img src={countryDetails.country[0].flag} alt=\"flag\" />\r\n            </div>\r\n            <div>\r\n                <h1>{countryDetails.country[0].name}</h1>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <p>\r\n                                <span>Native Name: </span><span>{countryDetails.country[0].nativeName}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>Population: </span><span>{countryDetails.country[0].population}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>Region: </span><span>{countryDetails.country[0].region}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>Sub Region: </span><span>{countryDetails.country[0].subregion}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>Capital: </span><span>{countryDetails.country[0].capital}</span>\r\n                            </p>\r\n                       </div>\r\n                        <div>\r\n                            <p>\r\n                                <span>Top Level Domain: </span><span>{countryDetails.country[0].topLevelDomain}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span>Currencies: </span><span>{countryDetails.country[0].currencies[0].code}</span>\r\n                            </p>\r\n                            <p> \r\n                                <span>Languages: </span>{countryDetails.country[0].languages.map((language: any, index: number)=>{\r\n                                    if(index===0 || index===1){\r\n                                        return (<span key={index} style={props.themeColor === \"light\" ? {color: \"dimgrey\", paddingRight: \"0.3rem\"} : {color: \"#e0d8d8\", paddingRight: \"0.3rem\"}}>{language.name}</span>)\r\n                                    }\r\n                                })}\r\n                            </p>\r\n                       </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p>Border Countries</p>\r\n                    <div>\r\n                        {countryDetails.country[0].borders.map((country:string, index: number)=>{\r\n                            return (\r\n                                <span key={index}>{country}</span>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CountryDetailsWrapper>\r\n    )\r\n}\r\n\r\nconst CountryDetailsWrapper = styled.div`\r\n\r\n\r\n@media (max-width: 539px){\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  >div:nth-of-type(1){\r\n      margin-right: 0;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n     \r\n      img{\r\n      width: 290px;    \r\n      height: auto;\r\n      box-shadow: rgba(0, 0, 0, 0.35) 0px 2px 9px;\r\n      }\r\n  }\r\n  >div:nth-of-type(2){\r\n\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin: 0 0.8rem;\r\nh1{\r\n    padding-top: 1rem;\r\n    padding-bottom: 1rem;\r\n    font-size: 1.3rem;\r\n}\r\n>div:nth-of-type(1){\r\n    /* background-color: purple; */\r\n    display: flex;\r\n    flex-direction: column;\r\n    div{\r\n       \r\n        display: flex;\r\n        flex-direction: column;\r\n        div:nth-of-type(1){\r\n            display: flex;\r\n            flex-direction: column;\r\n            /* background-color: yellow; */\r\n            p{\r\n                padding: 0.2rem 0.3rem 0.2rem 0;\r\n                span:nth-of-type(1){\r\n                    font-weight: 700;\r\n                }\r\n                span:nth-of-type(2){\r\n                    color: ${props => props.theme.colors.detailsInfoFontColor};\r\n                }\r\n            }\r\n            span{\r\n                white-space: nowrap;\r\n                font-size: 0.8rem;\r\n            }\r\n        }\r\n        div:nth-of-type(2){\r\n            display: flex;\r\n            flex-direction: column;\r\n            margin-top: 1rem;\r\n            /* background-color: pink; */\r\n            p{\r\n                padding: 0.2rem 0.3rem 0.2rem 0;\r\n                span:nth-of-type(1){\r\n                    font-weight: 700;\r\n                }\r\n                span:nth-of-type(2){\r\n                    color: ${props => props.theme.colors.detailsInfoFontColor};;\r\n                }\r\n            }\r\n            span{\r\n                white-space: nowrap;\r\n                font-size: 0.8rem;\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n>div:nth-of-type(2){\r\nmargin-top: 1rem;\r\n   display: flex;\r\n   width: 100%;\r\n   align-items: flex-start;\r\n \r\n   flex-direction: column;\r\n   p{\r\n       font-size: 0.8rem;\r\n       font-weight: 700;\r\n        margin-bottom: 0.7rem;\r\n       margin-right: 0rem;\r\n   }\r\n   div{\r\n       display: flex;\r\n        flex-wrap: wrap;\r\n       span{\r\n           border: 0.1rem solid ${props => props.theme.colors.bordersCountriesBorder};\r\n           padding: 0.2rem 0.3rem;\r\n           font-size: 0.8rem;\r\n           margin: 0.2rem 0.2rem;\r\n       }\r\n   }\r\n}\r\n}\r\n\r\n\r\n}\r\n@media (min-width: 540px){\r\n  \r\n    display: flex;\r\n    flex-direction: column;\r\n    >div:nth-of-type(1){\r\n        margin-right: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n       \r\n        img{\r\n        width: 300px;    \r\n        height: auto;\r\n        box-shadow: rgba(0, 0, 0, 0.35) 0px 2px 9px;\r\n        }\r\n    }\r\n    >div:nth-of-type(2){\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  h1{\r\n      padding-bottom: 1rem;\r\n      font-size: 1.3rem;\r\n      padding-top: 1rem;\r\n  }\r\n >div:nth-of-type(1){\r\n      /* background-color: purple; */\r\n      display: flex;\r\n      flex-direction: column;\r\n      div{\r\n         \r\n          display: flex;\r\n          flex-direction: row;\r\n          div:nth-of-type(1){\r\n              display: flex;\r\n              flex-direction: column;\r\n              /* background-color: yellow; */\r\n              p{\r\n                  padding: 0.2rem 0.3rem 0.2rem 0;\r\n                  span:nth-of-type(1){\r\n                      font-weight: 700;\r\n                  }\r\n                  span:nth-of-type(2){\r\n                      color: ${props => props.theme.colors.detailsInfoFontColor};\r\n                  }\r\n              }\r\n              span{\r\n                  white-space: nowrap;\r\n                  font-size: 0.8rem;\r\n              }\r\n          }\r\n          div:nth-of-type(2){\r\n              display: flex;\r\n              flex-direction: column;\r\n              /* background-color: pink; */\r\n              p{\r\n                  padding: 0.2rem 0.3rem 0.2rem 0;\r\n                  span:nth-of-type(1){\r\n                      font-weight: 700;\r\n                  }\r\n                  span:nth-of-type(2){\r\n                      color: ${props => props.theme.colors.detailsInfoFontColor};\r\n                  }\r\n              }\r\n              span{\r\n                  white-space: nowrap;\r\n                  font-size: 0.8rem;\r\n              }\r\n          }\r\n      }\r\n      \r\n }\r\n >div:nth-of-type(2){\r\n  margin-top: 1rem;\r\n     display: flex;\r\n     width: 100%;\r\n     align-items: center;\r\n     justify-content: space-between;\r\n     p{\r\n         font-size: 0.8rem;\r\n         font-weight: 700;\r\n     \r\n         margin-right: 0.8rem;\r\n     }\r\n     div{\r\n         display: flex;\r\n          flex-wrap: wrap;\r\n         span{\r\n             border: 0.1rem solid ${props => props.theme.colors.bordersCountriesBorder};\r\n             padding: 0.2rem 0.3rem;\r\n             font-size: 0.8rem;\r\n             margin: 0.2rem 0.2rem;\r\n         }\r\n     }\r\n }\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n@media (min-width: 768px){\r\n\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 100%;\r\n>div:nth-of-type(1){\r\n    margin-left: 1rem;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 2px 9px;\r\n    margin-right: 3.5rem;\r\n   \r\n    img{\r\n       \r\n        height: 250px;\r\n        object-fit: cover;\r\n    }\r\n}\r\n>div:nth-of-type(2){\r\n  \r\n    display: flex;\r\n    flex-direction: column;\r\n    h1{\r\n        padding-bottom: 1rem;\r\n        font-size: 1.3rem;\r\n    }\r\n   >div:nth-of-type(1){\r\n        /* background-color: purple; */\r\n        display: flex;\r\n        flex-direction: column;\r\n        div{\r\n           \r\n            display: flex;\r\n           \r\n            div:nth-of-type(1){\r\n                display: flex;\r\n                flex-direction: column;\r\n                /* background-color: yellow; */\r\n                p{\r\n                    padding: 0.2rem 0.3rem 0.2rem 0;\r\n                    span:nth-of-type(1){\r\n                        font-weight: 700;\r\n                    }\r\n                    span:nth-of-type(2){\r\n                        color: ${props => props.theme.colors.detailsInfoFontColor};\r\n                    }\r\n                }\r\n                span{\r\n                    white-space: nowrap;\r\n                    font-size: 0.8rem;\r\n                }\r\n            }\r\n            div:nth-of-type(2){\r\n                display: flex;\r\n                flex-direction: column;\r\n                /* background-color: pink; */\r\n                p{\r\n                    padding: 0.2rem 0.3rem 0.2rem 0;\r\n                    span:nth-of-type(1){\r\n                        font-weight: 700;\r\n                    }\r\n                    span:nth-of-type(2){\r\n                        color: ${props => props.theme.colors.detailsInfoFontColor};\r\n                    }\r\n                }\r\n                span{\r\n                    white-space: nowrap;\r\n                    font-size: 0.8rem;\r\n                }\r\n            }\r\n        }\r\n        \r\n   }\r\n   >div:nth-of-type(2){\r\n    margin-top: 1rem;\r\n       display: flex;\r\n       width: 100%;\r\n       align-items: center;\r\n       justify-content: space-between;\r\n       p{\r\n           font-size: 0.8rem;\r\n           font-weight: 700;\r\n       \r\n           margin-right: 1rem;\r\n       }\r\n       div{\r\n           display: flex;\r\n            flex-wrap: wrap;\r\n           span{\r\n               border: 0.1rem solid ${props => props.theme.colors.bordersCountriesBorder};\r\n               padding: 0.2rem 0.3rem;\r\n               font-size: 0.8rem;\r\n               margin: 0.2rem 0.2rem;\r\n           }\r\n       }\r\n   }\r\n}\r\n}\r\n`\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavBar } from \"../NavBar/NavBar\";\r\nimport { SearchAndContent } from \"../SearchAndContent/SearchAndContent\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IState } from \"../../reducers\";\r\nimport { ICountriesReducer } from \"../../reducers/countriesReducers\";\r\nimport { getCountries } from \"../../Actions/countriesActions\";\r\nimport { IDimensions } from \"../../entities/dimensionsType\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { CountryDetails } from \"../CountryDetails/CountryDetails\";\r\n\r\ntype GetCountries = ReturnType<typeof getCountries>;\r\n\r\ninterface IThemeColor {\r\n  themeColor: string;\r\n  switchThemeColor: () => void;\r\n}\r\n\r\nexport const MainPage: React.FC<IThemeColor> = (props) => {\r\n  const themeColor = props.themeColor;\r\n  const switchThemeColor = props.switchThemeColor;\r\n  const [dimensions, setDimensions] = useState<IDimensions>({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n  const [pagination, setPagination] = useState<string>(\"\");\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch<GetCountries>(getCountries());\r\n\r\n    return () => {};\r\n  }, [dispatch]);\r\n\r\n  const { countriesList } = useSelector<IState, ICountriesReducer>(\r\n    (globalState) => ({\r\n      ...globalState.countries,\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    if (dimensions.width < 1024) {\r\n      setPagination(\"mobile\");\r\n    } else setPagination(\"desktop\");\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [dimensions.width]);\r\n\r\n  const themeColorSettings = { themeColor, switchThemeColor };\r\n  const countriesListAndFiltered = { countriesList };\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <NavBarWrapper>\r\n          <NavBar {...themeColorSettings} />\r\n        </NavBarWrapper>\r\n        <Route path=\"/\" exact>\r\n          <SearchAndContentWrapper>\r\n            <SearchAndContent\r\n              {...countriesListAndFiltered}\r\n              pagination={pagination}\r\n              {...themeColorSettings}\r\n            />\r\n          </SearchAndContentWrapper>\r\n        </Route>\r\n        <Route path=\"/:region/:country\">\r\n          <CountryDetailsWrapper>\r\n            <CountryDetails themeColor={themeColor} />\r\n          </CountryDetailsWrapper>\r\n        </Route>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NavBarWrapper = styled.nav`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;600;800&display=swap\");\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  background-color: ${(props) => props.theme.colors.navBarBackground};\r\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);\r\n  padding: 0.5rem 0;\r\n  h3 {\r\n    padding: 0.75rem 0 0 0.75rem;\r\n    font-family: \"Nunito Sans\", sans-serif;\r\n    font-weight: 800;\r\n    color: ${(props) => props.theme.colors.fontColor};\r\n  }\r\n`;\r\nconst SearchAndContentWrapper = styled.section`\r\n  padding-top: 1.5rem;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CountryDetailsWrapper = styled.section`\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  width: 100%;\r\n  padding-top: 3rem;\r\n  min-height: 10vh;\r\n  min-height: 5vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 1rem;\r\n`;\r\n","\r\nimport {Dispatch} from 'redux';\r\nimport * as actionTypes from './ActionTypes/countriesTypes'\r\nimport {ISingleCountry} from '../entities/singleCountryType'\r\n\r\nexport const getCountries = (): Promise<ISingleCountry[]> =>((dispatch: Dispatch) =>{\r\n    return fetch('https://restcountries.eu/rest/v2/all')\r\n        .then(res =>res.json())\r\n        .then((countriesList: ISingleCountry[])=>{\r\n            dispatch({\r\n                type: actionTypes.GET_COUNTRIES,\r\n                countriesList\r\n            })\r\n        })\r\n}) as any;\r\n\r\n","export default {\r\n    colors:{\r\n        navBarBackground: '#FEFEFE',\r\n        inputbackground: '#FEFEFE',\r\n        selectBackground: '#FEFEFE',\r\n        bodyBackground: '#fff',\r\n        fontColor: 'black',\r\n        fontColorInputPlaceholder: \"#575756\",\r\n        fontColorSelect: \"#575756\",\r\n        fontColorInput: \"black\",\r\n        cardColor: '#FEFEFE',\r\n        fontCardColor: 'black',\r\n        backgroundContentCard: '#fff',\r\n        paginationBorderColor: \"lightgray\",\r\n        paginationBackgroundColor: \"#fff\",\r\n        paginationFontColor: \"#000\",\r\n        bordersCountriesBorder: \"#000\",\r\n        detailsInfoFontColor: \"dimgrey\"\r\n    }\r\n}\r\n","export default {\r\n    colors:{\r\n        navBarBackground: '#293743',\r\n        inputbackground: '#293743',\r\n        selectBackground: '#293743',\r\n        bodyBackground: '#1E2C35',\r\n        fontColor: '#fff',\r\n        fontColorInputPlaceholder: \"#fff\",\r\n        fontColorSelect: \"#fff\",\r\n        fontColorInput: \"#fff\",\r\n        cardColor: '#293743',\r\n        fontCardColor: '#fff',\r\n        backgroundContentCard: '#1E2C35',\r\n        paginationBorderColor: \"#fff\",\r\n        paginationBackgroundColor: \"#1E2C35\",\r\n        paginationFontColor: \"#fff\",\r\n        bordersCountriesBorder: \"#fff\",\r\n        detailsInfoFontColor: \"#e0d8d8\"\r\n        \r\n            \r\n    }\r\n}\r\n","import {combineReducers} from 'redux'\r\n\r\nimport countries, {ICountriesReducer} from './countriesReducers'\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    countries,\r\n})\r\n\r\nexport interface IState{\r\n    countries: ICountriesReducer,\r\n}","import {ISingleCountry} from '../entities/singleCountryType'\r\nimport * as actionTypes from '../Actions/ActionTypes/countriesTypes'\r\nexport interface ICountriesReducer{\r\n    countriesList: ISingleCountry[];\r\n\r\n}\r\n\r\nconst defaultState = (): ICountriesReducer => ({\r\n    countriesList:[]\r\n})\r\n\r\nexport default(state=defaultState(), action: any)=>{\r\n   \r\n    switch(action.type){\r\n        case actionTypes.GET_COUNTRIES: {\r\n            const payload: actionTypes.ICountriesTypes['GET_COUNTRIES'] = action;\r\n           \r\n            return{\r\n                ...state,\r\n                countriesList: payload.countriesList\r\n            }\r\n        }\r\n       \r\n        default: {\r\n            \r\n            return state\r\n        }\r\n    }\r\n}","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from '../reducers' \r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport default store","import React, {useState} from 'react';\nimport {GlobalStyles} from '../src/components/GlobalStyles'\nimport {MainPage} from './components/MainPage/MainPage'\nimport {ThemeProvider} from 'styled-components'\nimport light from  './components/Theme/Light'\nimport dark from  './components/Theme/Dark'\nimport {Provider} from 'react-redux'\nimport store from './tools/store'\n\nfunction App() {\n  const [themeColor, setThemeColor] = useState<string>('light')\n  const switchThemeColor = ()=>{\n    if(themeColor==='light')\n      setThemeColor('dark')\n    else setThemeColor('light')\n  }\n\n  const themeColorSetting = {themeColor, switchThemeColor}\n\n  return (\n    <ThemeProvider theme={themeColor==='light' ? light : dark}>\n    <div className=\"App\">\n      <GlobalStyles />\n      <Provider store={store}>\n      <MainPage {...themeColorSetting}/>\n      </Provider>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}